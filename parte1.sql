ALTER SESSION SET CONTAINER=XEPDB1;

alter session set "_ORACLE_SCRIPT"=true;


/*  creacion del Tablespace */
CREATE TABLESPACE BASEDATOSTP
LOGGING
DATAFILE '/opt/oracle/oradata/XE/XEPDB1/basedatosp.dbf'
SIZE 45M REUSE
AUTOEXTEND ON 
NEXT 22500 K MAXSIZE 135M;

ALTER SESSION SET CONTAINER=XEPDB1;

alter session set "_ORACLE_SCRIPT"=true;


create user BASETP identified by BASETP
    DEFAULT TABLESPACE BASEDATOSTP
    TEMPORARY TABLESPACE TEMP;
GRANT DBA TO BASETP WITH ADMIN OPTION;

conn BASETP@XEPDB1



/* -----------------------------CREACION DE TABLAS -----------------------------*/
CREATE TABLE RESERVA(
 CODIGO NUMBER (12) GENERATED ALWAYS AS IDENTITY 
 START WITH 1 
MINVALUE 1
MAXVALUE 99999999
INCREMENT BY 1 NOCACHE NOCYCLE
CONSTRAINT PK_RESERVA PRIMARY KEY,
FECHA_RESERVA DATE NOT NULL,
HUESPED_TITULAR NUMBER (10) NOT NULL,
MONTO_TOTAL NUMBER(10)NOT NULL,
SALDO_ABONAR NUMBER(10)NOT NULL,
CHECK_IN DATE NOT NULL,
CHECK_OUT DATE NOT NULL,
NUM_HABITACION NUMBER (5) NOT NULL,
ESTADO VARCHAR2(1) NOT NULL,
CODIGO_CANAL NUMBER(5) NOT NULL)
TABLESPACE BASEDATOSTP
STORAGE (INITIAL 639K );

CREATE TABLE CARGO_RESERVA(
CODIGO_CARGO NUMBER(10) GENERATED ALWAYS AS IDENTITY 
 START WITH 1 
MINVALUE 1
MAXVALUE 99999999
INCREMENT BY 1 NOCACHE NOCYCLE
CONSTRAINT PK_CARGO_RESERVA PRIMARY KEY,
CODIGO_RESERVA NUMBER (12) NOT NULL,
ID_PROD_SERV NUMBER (5) NOT NULL,
PRECIO_UNITARIO NUMBER(10) NOT NULL,
CANTIDAD NUMBER (5) NOT NULL,
APLICAR_COBRO VARCHAR2(1) DEFAULT 'S' NOT NULL,
CODIGO_FACTURA NUMBER(5))
TABLESPACE BASEDATOSTP
STORAGE (INITIAL 21569 K);

CREATE TABLE OCUPANTE (
CODIGO_OCUPANTE NUMBER(10) NOT NULL,
CODIGO_RESERVA NUMBER(12) NOT NULL,
FEC_HORA_ENTRADA DATE NOT NULL,
FEC_HORA_SALIDA DATE)
TABLESPACE BASEDATOSTP
STORAGE (INITIAL 328K);



/*--------------------------------CONSTRAINTS----------------------------------

+-----------------------------------------+
|                 RESERVA                 |
+-----------------------------------------+
| PK_RESERVA (CODIGO)                     |
| CANAL_RESERVA_RESERVA_FK (CODIGO_CANAL) |
| HABITACION_RESERVA_FK (NUM_HABITACION)  |
| HUESPUED_RESERVA_FK (HUESPED_TITULAR)   |
+-----------------------------------------+*/

alter table RESERVA
  add constraint CANAL_RESERVA_RESERVA_FK foreign key (CODIGO_CANAL)
  references CANAL_RESERVA (CODIGO);

 alter table RESERVA
  add constraint HABITACION_RESERVA_FK foreign key (NUM_HABITACION)
  references HABITACION (NUMERO);
 
 alter table RESERVA
  add constraint HUESPED_RESERVA_FK foreign key (HUESPED_TITULAR)
  references HUESPED (CODIGO);
 
 alter table RESERVA 
  add constraint CHKFECHA CHECK (CHECK_OUT > CHECK_IN);
  
 alter table RESERVA 
  add constraint CHKESTADO CHECK (ESTADO = 'P' OR 
                                (ESTADO = 'C' AND SALDO_ABONAR = 0.5 * MONTO_TOTAL)
  								OR (ESTADO = 'F' AND CHECK_OUT IS NOT NULL ) OR ESTADO = 'X');
 
  
/*-----------------------------------------------------------------------------
+-----------------------------------------------+
|                 CARGO_RESERVA                 |
+-----------------------------------------------+
| PK_CARGO_RESERVA (CODIGO_CARGO)               |
| FACTURA_CONSUMO_RESERVA_FK (CODIGO_FACTURA)   |
| PRODUCTO_SERVICIO_CONSUMO_R199 (ID_PROD_SERV) |
| RESERVA_CONSUMO_RESERVA_FK (CODIGO_RESERVA))  |
+-----------------------------------------------+*/

  
  alter table CARGO_RESERVA
    add constraint FACTURA_CONSUMO_RESERVA_FK foreign key (CODIGO_FACTURA)
    references FACTURA_VENTA (CODIGO);
 
  alter table CARGO_RESERVA
  add constraint PRODUCTO_SERVICIO_CONSUMO_R199 foreign key (ID_PROD_SERV)
  references PRODUCTO_SERVICIO (ID);
  
  alter table CARGO_RESERVA
    add constraint RESERVA_CONSUMO_RESERVA_FK foreign key (CODIGO_RESERVA)
    references RESERVA (CODIGO) ON DELETE CASCADE;
  
  alter table CARGO_RESERVA 
    add constraint CHK_APLICAR_COBRO CHECK ((APLICAR_COBRO = 'N' AND CODIGO_FACTURA IS NULL) OR 
  										  APLICAR_COBRO = 'S');
  											
 
/*-----------------------------------------------------------------------------
 * 
+---------------------------------------------------+
|                     OCUPANTE                      |
+---------------------------------------------------+
| PK_COD_OCUPANTE (CODIGO_OCUPANTE, CODIGO_RESERVA) |
| HUESPUED_OCUPANTE_FK (CODIGO_OCUPANTE)            |
| RESERVA_OCUPANTE_FK (CODIGO_RESERVA)              |
+---------------------------------------------------+
 */ 
 
 alter table OCUPANTE
  add constraint HUESPED_OCUPANTE_FK foreign key (CODIGO_OCUPANTE)
  references HUESPED (CODIGO);
 
 alter table OCUPANTE
  add constraint RESERVA_OCUPANTE_FK foreign key (CODIGO_OCUPANTE)
  references RESERVA (CODIGO);
 
 alter table OCUPANTE
  add constraint PK_COD_OCUPANTE primary key (CODIGO_OCUPANTE, CODIGO_RESERVA);
 
  alter table OCUPANTE 
  add constraint CHK_FECHA_SALIDA CHECK (FEC_HORA_SALIDA > FEC_HORA_ENTRADA);
 
 
 
 /*-----------------------------------PARTE B--------------------------------*/
 
create sequence SEC_PAGO_ITEM
	increment by 1
	start with 1
	maxvalue 99999
	nocache
	nocycle;

---------------------------SENTENCIA SELECT - SUBQUERIES - SENTENCIA DML---------------------
---------------------------------------------II.3-----------------------------------------------
INSERT INTO DETALLE_PAGO (COD_FACTURA, NUM_ITEM, FORMA_PAGO, MONTO)
WITH CODIGO_HUESPED as(
	SELECT H.CODIGO CODIGO
	FROM HUESPED H
	JOIN RESERVA R 
	ON R.HUESPED_TITULAR = H.CODIGO 
	WHERE
		UPPER(PRIMER_NOMBRE)= UPPER('JUAN')
		AND UPPER(SEGUNDO_NOMBRE) = UPPER('RAMON')
		AND UPPER(PRIMER_APELLIDO) = UPPER('CESPEDES')
		AND TRUNC(R.CHECK_OUT)= TRUNC(SYSDATE)
),
CODIGO_FACTURA as(
	SELECT CODIGO COD_FACTURA
	FROM FACTURA_VENTA
	WHERE CODIGO_HUESPED IN (SELECT CODIGO FROM CODIGO_HUESPED)
),
CARGOS AS(
	SELECT PRECIO_UNITARIO PRECIO, CANTIDAD CANT, CODIGO_FACTURA COD_FACTURA
	FROM CARGO_RESERVA
	WHERE APLICAR_COBRO = UPPER('S')
	AND CODIGO_FACTURA IN (SELECT COD_FACTURA FROM CODIGO_FACTURA)	
)
SELECT FACT, SEC_PAGO_ITEM.NEXTVAL, 'EF', MONTO
FROM
  (
     SELECT 
     	COD_FACTURA AS FACT,
     	(PRECIO * CANT) MONTO	
     FROM CARGOS
  ) ;

----------------------------------------------II.4-------------------------------------------
MERGE INTO FACTURA_VENTA FV
 	USING(
    WITH CARGOS_FACTURAR as(
	    SELECT SUM(CR.PRECIO_UNITARIO * CR.CANTIDAD)MONTO, CR.CODIGO_FACTURA COD_FACTURA, PS.PORC_IVA IVA
	    FROM CARGO_RESERVA CR
	    JOIN PRODUCTO_SERVICIO PS
	    ON CR.ID_PROD_SERV = PS.ID
    	WHERE CR.CODIGO_FACTURA IS NOT NULL
	    AND UPPER(CR.APLICAR_COBRO) = UPPER('S')
	    GROUP BY CR.CODIGO_FACTURA,CR.APLICAR_COBRO,PS.PORC_IVA, PS.DESCRIPCION
  	)
    SELECT SUM(CASE 
			WHEN IVA = 10 THEN MONTO - (MONTO / 11)
			WHEN IVA = 5 THEN MONTO -(MONTO / 21)
			ELSE 0
		  END) MONTO_GRAVADO,
		SUM(CASE 
			WHEN IVA = 0 THEN MONTO
			ELSE 0
		END) MONTO_EXENTO,
		SUM(CASE 
			WHEN IVA = 10 THEN MONTO / 11
			WHEN IVA = 5 THEN MONTO / 21
			ELSE 0
		END) MONTO_IVA,
		COD_FACTURA		
		FROM CARGOS_FACTURAR
		GROUP BY COD_FACTURA) CF
	ON (FV.CODIGO  = CF.COD_FACTURA)
	WHEN MATCHED THEN
	UPDATE SET FV.MONTO_GRAVADO = CF.MONTO_GRAVADO,
			   FV.MONTO_EXENTO = CF.MONTO_EXENTO,
			   FV.MONTO_IVA = CF.MONTO_IVA
----------------------------------------------III.5----------------------------------------------
CREATE MATERIALIZED VIEW V_CARGOS_HUESPEDES
TABLESPACE BASEDATOSTP
BUILD IMMEDIATE
REFRESH  START WITH TRUNC(SYSDATE) +5/24
		NEXT TRUNC(SYSDATE+1) + 5/24
	
AS (
SELECT h.NUMERO, r.CODIGO, c.DESCRIPCION,
	ocu.CANTIDAD_DE_OCUPANTES ,
	CASE
		WHEN ocu.CANTIDAD_DE_OCUPANTES <= C.CAPACIDAD_MAXIMA
			THEN (R.CHECK_OUT - R.CHECK_IN)*C.COSTO_X_NOCHE
		ELSE
			(R.CHECK_OUT - R.CHECK_IN)*C.COSTO_X_NOCHE + (ocu.CANTIDAD_DE_OCUPANTES-C.CAPACIDAD_MAXIMA)*(C.COSTO_ADICIONAL_HUESP)
		END AS COSTO_HABITACION,
		cargos.OTROS_CARGOS 
	FROM RESERVA r JOIN HABITACION h  ON h.NUMERO = r.NUM_HABITACION
	JOIN CATEGORIA c ON c.CODIGO = h.COD_CATEGORIA
	LEFT JOIN (SELECT o.CODIGO_RESERVA ,COUNT(O.CODIGO_RESERVA) CANTIDAD_DE_OCUPANTES  FROM OCUPANTE O 
	JOIN RESERVA r ON r.CODIGO =o.CODIGO_RESERVA GROUP BY o.CODIGO_RESERVA )  ocu
		ON ocu.CODIGO_RESERVA = r.codigo 
	LEFT JOIN ( SELECT
		R2.CODIGO CODIGO_RESERVA, SUM(CR.PRECIO_UNITARIO*CR.CANTIDAD) OTROS_CARGOS
		FROM RESERVA R2 
		JOIN CARGO_RESERVA CR ON CR.CODIGO_RESERVA = R2.CODIGO
		WHERE CR.APLICAR_COBRO = 'S' AND CR.CODIGO_FACTURA IS NULL
		GROUP BY R2.CODIGO
	) cargos ON cargos.CODIGO_RESERVA = r.CODIGO);
----------------------------------------------III.6-----------------------------------------------
CREATE ROLE RESERVA;
SPOOL otorgar_permisos.sql
SELECT 'GRANT SELECT, INSERT, DELETE, UPDATE ON '|| OBJ.object_name ||'  TO RESERVA;'
FROM   USER_OBJECTS OBJ
WHERE  OBJ.object_type = 'TABLE'
AND OBJ.object_name IN (
	'TIPO_DOCUMENTO','HUESPED','CANAL_RESERVA', 'RESERVA', 'CATEGORIA', 'HABITACION',
	'PRODUCTO_SERICIO', 'MOVIMIENTO_PRODUCTO','CARGO_RESERVA','TIMBRADO', 'OCUPANTE',
	'FACTURA_VENTA', 'DETALLE_PAGO','EMISOR_TARJETA');
SPOOL OFF
@otorgar_permisos.sql



--agregar el user y otorgale el rol!!!!!!!!
--SELECT * FROM ROLE_TAB_PRIVS WHERE ROLE = 'RESERVA';
  